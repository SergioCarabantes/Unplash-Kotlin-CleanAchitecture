apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.sergio.unsplash"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        vectorDrawables.useSupportLibrary = true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    ktlint
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
}

dependencies {
    def projectDependencies = rootProject.ext.projectDependencies

    implementation project(':domain')
    implementation project(':data')

    implementation projectDependencies.kotlin
    implementation projectDependencies.coreKtx
    implementation projectDependencies.constraintLayout
    implementation projectDependencies.lifecycle
    implementation projectDependencies.lifecycleExtensions
    implementation projectDependencies.recyclerView
    implementation projectDependencies.dagger
    kapt projectDependencies.daggerCompiler
    implementation projectDependencies.rxJava
    implementation projectDependencies.rxAndroid
    implementation projectDependencies.gson
    implementation projectDependencies.retrofit
    implementation projectDependencies.retrofitGson
    implementation projectDependencies.retrofitRxJava2
    implementation projectDependencies.okhttp
    implementation projectDependencies.okhttpLoggingInterceptor
    implementation projectDependencies.timberLogging
    implementation projectDependencies.glide
    ktlint projectDependencies.ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "--reporter=plain",
            "--reporter=checkstyle,output=${buildDir}/reports/ktlint/checkstyle.xml",
            "${projectDir}/**/src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
